#include <windows.h>  
#include <GL/glut.h>  



void initGL() {
	glClearColor(0.0f, 0.0f, 0.0f, 1.0f); 
	glClearDepth(1.0f);                   
	glEnable(GL_DEPTH_TEST);   
	glDepthFunc(GL_LEQUAL);    
	glShadeModel(GL_SMOOTH);   
	glHint(GL_PERSPECTIVE_CORRECTION_HINT, GL_NICEST); 
}

void display() {
	glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); 

	glBegin(GL_QUADS);               
	//depan
	glColor3f(1.0f, 1.0f, 1.0f);
	glVertex3f(0.0f, 20.0f, 4.0f);
	glVertex3f(20.0f, 20.0f, 4.0f);
	glVertex3f(20.0f, -4.0f, 4.0f);
	glVertex3f(0.0f, -4.0f, 4.0f);
	// tengah
	glColor3f(1.0f, 1.0f, 1.0f);
	glVertex3f(0.0f, 20.0f, 4.0f);
	glVertex3f(0.0f, -4.0f, 4.0f);
	glVertex3f(-5.0f, -4.0f, 0.0f);
	glVertex3f(-5.0f, 20.0f, 0.0f);
	
	//samping kiri
	glColor3f(1.0f, 1.0f, 1.0f);
	glVertex3f(-5.0f, 20.0f, 0.0f);
	glVertex3f(-5.0f, -4.0f, 0.0f);
	glVertex3f(-5.0f, -4.0f, -20.0f);
	glVertex3f(-5.0f, 20.0f, -20.0f);

	//samping kanan
	glColor3f(1.0f, 1.0f, 1.0f);
	glVertex3f(20.0f, 20.0f, 4.0f);
	glVertex3f(20.0f, -4.0f, 4.0f);
	glVertex3f(20.0f, -4.0f, -20.0f);
	glVertex3f(20.0f, 20.0f, -20.0f);
	//belakang
	glColor3f(1.0f, 1.0f, 1.0f);
	glVertex3f(-5.0f, 20.0f, -20.0f);
	glVertex3f(20.0f, 20.0f, -20.0f);
	glVertex3f(20.0f, -4.0f, -20.0f);
	glVertex3f(-5.0f, -4.0f, -20.0f);
	glEnd();
// roof top
	glBegin(GL_POLYGON);
	glColor3f(0.25f, 0.1f, 0.0f);
	glVertex3f(0.0f, 20.0f, 4.0f);
	glVertex3f(-5.0f, 20.0f, 0.0f);
	glVertex3f(-5.0f, 20.0f, -20.0f);
	glVertex3f(20.0f, 20.0f, -20.0f);
	glVertex3f(20.0f, 20.0f, 4.0f);
	glEnd();

	glBegin(GL_QUADS); 
	//bawah
	glColor3f(0.0f, 0.2f, 0.0f);
	glVertex3f(-9.0f, -4.0f, 10.0f);
	glVertex3f(24.0f, -4.0f, 10.0f);
	glVertex3f(24.0f, -4.0f, -24.0f);
	glVertex3f(-9.0f, -4.0f, -24.0f);
	glEnd();


	glBegin(GL_QUADS); 
	//pintu
	glColor3f(0.3f, 0.0f, 0.0f);
	glVertex3f(-4.0f, 1.5f, 0.9f);
	glVertex3f(-1.0f, 1.5f, 3.2);
	glVertex3f(-1.0f, -4.0f, 3.2f);
	glVertex3f(-4.0f, -4.0f, 0.9f);

	glColor3f(0.3f, 0.2f, 0.0f);
	glVertex3f(3.0f, 1.5f, 4.1f);
	glVertex3f(6.0f, 1.5f, 4.1f);
	glVertex3f(6.0f, -4.0f, 4.1f);
	glVertex3f(3.0f, -4.0f, 4.1f);

	glColor3f(0.3f, 0.2f, 0.0f);
	glVertex3f(9.0f, 1.5f, 4.1f);
	glVertex3f(12.0f, 1.5f, 4.1f);
	glVertex3f(12.0f, -4.0f, 4.1f);
	glVertex3f(9.0f, -4.0f, 4.1f);

	glColor3f(0.3f, 0.2f, 0.0f);
	glVertex3f(15.0f, 1.5f, 4.1f);
	glVertex3f(18.0f, 1.5f, 4.1f);
	glVertex3f(18.0f, -4.0f, 4.1f);
	glVertex3f(15.0f, -4.0f, 4.1f);
//kiri
	glColor3f(0.3f, 0.2f, 0.0f);
	glVertex3f(-5.0f, 1.5f, -3.0f);
	glVertex3f(-5.0f, 1.5f, -6.0f);
	glVertex3f(-5.0f, -4.0f, -6.0f);
	glVertex3f(-5.0f, -4.0f, -3.0f);

	glColor3f(0.3f, 0.2f, 0.0f);
	glVertex3f(-5.0f, 1.5f, -9.0f);
	glVertex3f(-5.0f, 1.5f, -12.0f);
	glVertex3f(-5.0f, -4.0f, -12.0f);
	glVertex3f(-5.0f, -4.0f, -9.0f);


	glColor3f(0.3f, 0.2f, 0.0f);
	glVertex3f(-5.0f, 1.5f, -15.0f);
	glVertex3f(-5.0f, 1.5f, -18.0f);
	glVertex3f(-5.0f, -4.0f, -18.0f);
	glVertex3f(-5.0f, -4.0f, -15.0f);


// jendela tengah
	glColor3f(0.0f, 0.0f, 0.0f);
	glVertex3f(3.0f, 10.0f, 4.1f);
	glVertex3f(5.0f, 10.0f, 4.1f);
	glVertex3f(5.0f, 6.0f, 4.1f);
	glVertex3f(3.0f, 6.0f, 4.1f);

	glColor3f(0.0f, 0.0f, 0.0f);
	glVertex3f(8.0f, 10.0f, 4.1f);
	glVertex3f(10.0f, 10.0f, 4.1f);
	glVertex3f(10.0f, 6.0f, 4.1f);
	glVertex3f(8.0f, 6.0f, 4.1f);
	
	glColor3f(0.0f, 0.0f, 0.0f);
	glVertex3f(13.0f, 10.0f, 4.1f);
	glVertex3f(15.0f, 10.0f, 4.1f);
	glVertex3f(15.0f, 6.0f, 4.1f);
	glVertex3f(13.0f, 6.0f, 4.1f);
//kiri
	glColor3f(0.0f, 0.0f, 0.0f);
	glVertex3f(-5.0f, 10.0f, -3.0f);
	glVertex3f(-5.0f, 6.0f, -3.0f);
	glVertex3f(-5.0f, 6.0f, -5.0f);
	glVertex3f(-5.0f, 10.0f, -5.0f);

	glColor3f(0.0f, 0.0f, 0.0f);
	glVertex3f(-5.0f, 10.0f, -8.0f);
	glVertex3f(-5.0f, 6.0f, -8.0f);
	glVertex3f(-5.0f, 6.0f, -10.0f);
	glVertex3f(-5.0f, 10.0f, -10.0f);

	glColor3f(0.0f, 0.0f, 0.0f);
	glVertex3f(-5.0f, 10.0f, -13.0f);
	glVertex3f(-5.0f, 6.0f, -13.0f);
	glVertex3f(-5.0f, 6.0f, -15.0f);
	glVertex3f(-5.0f, 10.0f, -15.0f);
// jendela atas
	glColor3f(0.0f, 0.0f, 0.0f);
	glVertex3f(3.0f, 17.0f, 4.1f);
	glVertex3f(5.0f, 17.0f, 4.1f);
	glVertex3f(5.0f, 13.0f, 4.1f);
	glVertex3f(3.0f, 13.0f, 4.1f);

	glColor3f(0.0f, 0.0f, 0.0f);
	glVertex3f(8.0f, 17.0f, 4.1f);
	glVertex3f(10.0f, 17.0f, 4.1f);
	glVertex3f(10.0f, 13.0f, 4.1f);
	glVertex3f(8.0f, 13.0f, 4.1f);

	glColor3f(0.0f, 0.0f, 0.0f);
	glVertex3f(13.0f, 17.0f, 4.1f);
	glVertex3f(15.0f, 17.0f, 4.1f);
	glVertex3f(15.0f, 13.0f, 4.1f);
	glVertex3f(13.0f, 13.0f, 4.1f);
// kiri

	glColor3f(0.0f, 0.0f, 0.0f);
	glVertex3f(-5.0f, 17.0f, -3.0f);
	glVertex3f(-5.0f, 13.0f, -3.0f);
	glVertex3f(-5.0f, 13.0f, -5.0f);
	glVertex3f(-5.0f, 17.0f, -5.0f);
	
	glColor3f(0.0f, 0.0f, 0.0f);
	glVertex3f(-5.0f, 17.0f, -8.0f);
	glVertex3f(-5.0f, 13.0f, -8.0f);
	glVertex3f(-5.0f, 13.0f, -10.0f);
	glVertex3f(-5.0f, 17.0f, -10.0f);

	glColor3f(0.0f, 0.0f, 0.0f);
	glVertex3f(-5.0f, 17.0f, -13.0f);
	glVertex3f(-5.0f, 13.0f, -13.0f);
	glVertex3f(-5.0f, 13.0f, -15.0f);
	glVertex3f(-5.0f, 17.0f, -15.0f);

	
	glEnd();

	glutSwapBuffers();  
}



void keyboard(unsigned char key, int x, int y) {
	switch (key) {
		//gerak ke kiri
	case 'a':
	case 'A':
		glTranslatef(-1.0, 0.0, 0.0);
		break;
		//gerak ke kanan
	case 'd':
	case 'D':
		glTranslatef(1.0, 0.0, 0.0);
		break;
		//gerak ke depan
	case 'w':
	case 'W':
		glTranslatef(0.0, 0.0, 1.0);
		break;
		//gerak ke belakang
	case 's':
	case 'S':
		glTranslatef(0.0, 0.0, -1.0);
		break;
		//gerak ke atas
	case 'q':
	case 'Q':
		glTranslatef(0.0, 1.0, 0.0);
		break;
		//gerak ke bawah
	case 'e':
	case 'E':
		glTranslatef(0.0, -1.0, 0.0);
		break;
		//rotate ke kiri
	case 'j':
	case 'J':
		glRotatef(1.0, 0.0, -1.0, 0.0);
		break;
		//rotate ke kanan
	case 'l':
	case 'L':
		glRotatef(1.0, 0.0, 1.0, 0.0);
		break;
		//rotate ke samping kanan
	case 'i':
	case 'I':
		glRotatef(1.0, 0.0, 0.0, -1.0);
		break;
		//rotate ke samping kiri
	case 'k':
	case 'K':
		glRotatef(1.0, 0.0, 0.0, 5.0);
		break;
		//rotate ke atas
	case 'o':
	case 'O':
		glRotatef(1.0, -5.0, 0.0, 0.0);
		break;
		//rotate ke bawah
	case 'u':
	case 'U':
		glRotatef(1.0, 5.0, 0.0, 0.0);
		break;
	}
	display();
	glutPostRedisplay(); 
}
void reshape(GLsizei width, GLsizei height) {  

	if (height == 0) height = 1;               
	GLfloat aspect = (GLfloat)width / (GLfloat)height;
	glViewport(0, 0, width, height);
	glMatrixMode(GL_PROJECTION);  
	glLoadIdentity();             
	gluPerspective(45.0f, aspect, 0.1f, 100.0f);
}


int main(int argc, char** argv) {
	glutInit(&argc, argv);            
	glutInitDisplayMode(GLUT_DOUBLE); 
	glutInitWindowSize(640, 480);   
	glutInitWindowPosition(350, 50); 
	glutCreateWindow("Royal Melbourne Institute of Technology");        
	glutDisplayFunc(display);     
	glutReshapeFunc(reshape);      
	glutKeyboardFunc(keyboard);
	initGL();                      
	glutMainLoop();                 
	return 0;
}
